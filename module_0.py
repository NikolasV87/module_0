#!/usr/bin/env python
# coding: utf-8

# In[ ]:
import numpy as np
start = 1                                 # Нижняя граница поиска.
stop = 101                             # Верхняя граница поиска + 1 .
number = np.random.randint(start, stop)    # Загадали число.
count = 0  # Счетчик попыток.


def binary_search(count):
     """Создаем функцию для двоичного поиска искомого числа
    Функция принимает число, и вовращает количество попыток.
    """
    a = [i for i in range(start, stop)]  # Создаём список, с границами поиска нужного числа, в нашем случае от 1 до 100.
    p = 0 
    r = len(a) - 1
    while p <= r:                     #  Создаем цикл .
        count += 1                         # На каждое выполнение  цикла увеличиваем число попыток на 1 .
        q = (p + r) // 2               # Находим средне число списка.
        if a[q] == number:       # Если число располагаеться по средине, то прерываем цикл, возвращаем искомое число попыток.
            break
        elif a[q] > number:      #  Если число находиться в первой половине списка(в промежутке от 1 до 50), то возвращаем r  со значением .
            r = q - 1                       # возвращаем r  в начало цикла со значением середины списка, что бы продолжить поиск в первой половине списка.
        elif a[q] < number:      #  Если число находиться во второй половине списка(в промежутке от 50 до 100), то возвращаем r  со значением  .
            p = q + 1                     #  возвращаем q  в начало цикла со значением середины списка, что бы продолжить поиск в первой половине списка.
    return count                    #  Выход из цикла, если угадали.


print (f"Вы угадали число {number} за {binary_search(count)} попыток.")